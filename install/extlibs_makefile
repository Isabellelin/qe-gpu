# Copyright (C) 2001-2016 Quantum ESPRESSO group
# Copyright (C) 2017 Filippo Spiga
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License. See the file `License' in the root directory
# of the present distribution.
#
# Makefile for fundamental CPU/GPU math libraries

include ../make.inc
include install_utils

# .NOTPARALLEL: liblapack_internal libeigensolver_gpu

LAPACK_NETLIB=lapack-3.6.1.tgz
LAPACK_NETLIB_NAME=lapack-3.6.1
LAPACK_NETLIB_URL=http://www.netlib.org/lapack/${LAPACK_NETLIB}

EIGENSOLVER_GPU=v0.1.tar.gz
EIGENSOLVER_GPU_NAME=Eigensolver_gpu-0.1
EIGENSOLVER_GPU_URL=https://github.com/NVIDIA/Eigensolver_gpu/archive/${EIGENSOLVER_GPU}

all: 
	$(MAKE) liblapack_$(NETLIB_LIBS_SWITCH) 
	$(MAKE) libeigensolver_gpu
	$(MAKE) libiotk 

libblas	:	liblapack
liblapack : liblapack_$(NETLIB_LIBS_SWITCH) 

liblapack_external : fake_lapack_external

fake_lapack_external :
	touch fake_liblapack.a
	-rm fake_liblapack.a

liblapack_internal:
	$(call download_and_unpack,$(LAPACK_NETLIB_NAME),$(LAPACK_NETLIB_URL),LAPACK,LAPACK)
	if test ! -e ../LAPACK/liblapack.a && test -e make_lapack.inc; then \
	  (cp make_lapack.inc ../LAPACK/make.inc; \
	  cd ../LAPACK; $(MAKE) blaslib lapacklib); else \
        (echo "no configuration file found for lapack"; \
         echo "run configure from main QE dir"; exit); fi 


libeigensolver_gpu:
	$(call download_and_unpack,$(EIGENSOLVER_GPU_NAME),$(EIGENSOLVER_GPU_URL),EIGENSOLVER_GPU,EIGENSOLVER_GPU)
	if test ! -e ../Eigensolver_gpu-0.1/lib_eigsolve/lib_eigsolve.a && test -e Makefile.lib_eigsolve; then \
    (cp Makefile.lib_eigsolve ../Eigensolver_gpu-0.1/lib_eigsolve/Makefile; \
    cd ../Eigensolver_gpu-0.1/lib_eigsolve/; $(MAKE) ); else \
        (echo "no configuration file found for GPU custom eigensolver"; exit); fi

libiotk: 
	if test ! -d ../S3DE; then \
	(gzip -dc ../archive/iotk-1.2.beta.tar.gz | (cd ../; tar -xvf -)) ; \
	if test -e Makefile_iotk; then \
        (cp Makefile_iotk ../S3DE/iotk/src/Makefile); fi; \
	if test -e iotk_config.h; then \
	(cp iotk_config.h ../S3DE/iotk/include/iotk_config.h); fi; fi
	cd ../S3DE/iotk/src; $(MAKE) lib+util; 
	cd ../bin; ln -fs ../S3DE/iotk/tools/iotk .; \
	ln -fs ../S3DE/iotk/src/iotk.x .; \
	ln -fs ../S3DE/iotk/src/iotk_print_kinds.x .; \
	cd ../; ln -fs S3DE/iotk iotk
	
# cleaning
lapack_clean:
	if test -d ../LAPACK; then (cd ../LAPACK; $(MAKE) clean); fi
lapack_veryclean:
	if test -d ../LAPACK; then (rm -R -f ../LAPACK ../${LAPACK_NETLIB_NAME}); fi
iotk_clean:
	if test -d ../S3DE; then (cd ../S3DE; $(MAKE) clean); fi
	if test -d ../iotk; then (rm -R -f ../iotk); fi
	if test -e ../S3DE/iotk/src/iotk.x; then \
	rm -f ../S3DE/iotk/src/iotk.x; fi
	(rm -f ../bin/iotk; \
	rm -f ../bin/iotk.x; \
	rm -f ../bin/iotk_print_kinds.x)
iotk_veryclean:
	if test -d ../S3DE; then (rm -R -f ../S3DE); fi
	if test -d ../iotk; then (rm -R -f ../iotk); fi
	if test -e ../S3DE/iotk/src/iotk.x; then (rm -f ../S3DE/iotk/src/iotk.x); fi
	rm -f ../bin/iotk; \
	rm -f ../bin/iotk.x; \
	rm -f ../bin/iotk_print_kinds.x; \
	rm -f ../iotk
libeigensolver_gpu_clean:
	if test -d ../EIGENSOLVER_GPU; then (cd ../EIGENSOLVER_GPU; $(MAKE) clean); fi
libeigensolver_gpu_veryclean:
	if test -d ../EIGENSOLVER_GPU; then (rm -R -f ../EIGENSOLVER_GPU ../${EIGENSOLVER_GPU_NAME}); fi

# general cleaning
clean: lapack_clean iotk_clean libeigensolver_gpu_clean
veryclean: lapack_veryclean iotk_veryclean libeigensolver_gpu_veryclean
